apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-allopen"
apply from: 'detekt.gradle'
apply from: 'cpd.gradle'
apply from: 'jacoco.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId 'com.smlnskgmail.jaman.randomnotes'
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '4.1.1'

        testInstrumentationRunner 'com.smlnskgmail.jaman.randomnotes.runner.AndroidJacocoTestRunner'

        buildConfigField 'String', 'CLOUD_REPOSITORY', "\"\""
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        animationsDisabled = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }

    flavorDimensions 'build'
    productFlavors {
        parse {
            flavorDimensions 'build'

            buildConfigField 'String', 'CLOUD_REPOSITORY', "\"PARSE\""
        }
        fake {
            flavorDimensions 'build'

            buildConfigField 'String', 'CLOUD_REPOSITORY', "\"FAKE\""
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionName = android.defaultConfig.versionName
            def productFlavorName = variant.flavorName
            def buildVersionName = variant.buildType.name
            output.outputFileName = "parse-android-test-app-${productFlavorName}-${buildVersionName}_${versionName}.apk"
        }
    }
}

allOpen {
    annotation('com.smlnskgmail.jaman.randomnotes.utils.OpenForTests')
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

    // AdaptiveRecyclerView
    implementation 'com.smlnskgmail.jaman:adaptiverecyclerview:0.1.2'

    // Parse
    implementation 'com.github.parse-community.Parse-SDK-Android:parse:1.23.0'
    implementation 'com.github.parse-community.Parse-SDK-Android:google:1.23.0'
    implementation 'com.github.parse-community.Parse-SDK-Android:facebook:1.23.0'

    // ORMLite
    implementation 'com.j256.ormlite:ormlite-core:5.1'
    implementation 'com.j256.ormlite:ormlite-android:5.1'

    // FAB menu
    implementation 'me.jahirfiquitiva:FABsMenu:1.1.4'

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'

    // Unit tests
    testImplementation 'junit:junit:4.13'

    // Android tests
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "org.mockito:mockito-core:3.3.0"
    androidTestImplementation "org.mockito:mockito-android:3.3.0"
    androidTestImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.24'
}
